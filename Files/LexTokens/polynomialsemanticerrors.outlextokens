[inlinecmt, // ====== Class declarations ====== //, 1] 
[class, class, 2] [id, POLYNOMIAL, 2] [opencubr, {, 2] 
[public, public, 3] [function, function, 3] [id, evaluate, 3] [colon, :, 3] [openpar, (, 3] [id, x, 3] [colon, :, 3] [float, float, 3] [closepar, ), 3] [returntype, =>, 3] [float, float, 3] [semi, ;, 3] 
[public, public, 4] [function, function, 4] [id, evaluate2, 4] [colon, :, 4] [openpar, (, 4] [id, x, 4] [colon, :, 4] [float, float, 4] [closepar, ), 4] [returntype, =>, 4] [float, float, 4] [semi, ;, 4] [inlinecmt, // 6.2, 4] 
[closecubr, }, 5] [semi, ;, 5] 
[class, class, 6] [id, POLYNOMIAL, 6] [opencubr, {, 6] [inlinecmt, // 8.1 done, 6] 
[public, public, 7] [function, function, 7] [id, evaluate, 7] [colon, :, 7] [openpar, (, 7] [id, x, 7] [colon, :, 7] [float, float, 7] [closepar, ), 7] [returntype, =>, 7] [float, float, 7] [semi, ;, 7] 
[public, public, 8] [function, function, 8] [id, evaluate, 8] [colon, :, 8] [openpar, (, 8] [id, x, 8] [colon, :, 8] [integer, integer, 8] [comma, ,, 8] [id, y, 8] [colon, :, 8] [float, float, 8] [closepar, ), 8] [returntype, =>, 8] [integer, integer, 8] [semi, ;, 8] [inlinecmt, // 9.2, 8] 
[closecubr, }, 9] [semi, ;, 9] 
[class, class, 10] [id, LINEAR, 10] [isa, isa, 10] [id, POLYNOMIAL, 10] [opencubr, {, 10] 
[private, private, 11] [attribute, attribute, 11] [id, a, 11] [colon, :, 11] [float, float, 11] [semi, ;, 11] 
[private, private, 12] [attribute, attribute, 12] [id, b, 12] [colon, :, 12] [float, float, 12] [semi, ;, 12] 
[private, private, 13] [attribute, attribute, 13] [id, b, 13] [colon, :, 13] [integer, integer, 13] [semi, ;, 13] [inlinecmt, // 8.3 done, 13] 
[public, public, 15] [constructor, constructor, 15] [colon, :, 15] [openpar, (, 15] [id, A, 15] [colon, :, 15] [float, float, 15] [comma, ,, 15] [id, B, 15] [colon, :, 15] [float, float, 15] [closepar, ), 15] [semi, ;, 15] 
[public, public, 16] [function, function, 16] [id, evaluate, 16] [colon, :, 16] [openpar, (, 16] [id, x, 16] [colon, :, 16] [float, float, 16] [closepar, ), 16] [returntype, =>, 16] [float, float, 16] [semi, ;, 16] [inlinecmt, // 9.3, 16] 
[closecubr, }, 17] [semi, ;, 17] 
[class, class, 19] [id, QUADRATIC, 19] [isa, isa, 19] [id, POLYNOMIAL, 19] [opencubr, {, 19] 
[private, private, 20] [attribute, attribute, 20] [id, a, 20] [colon, :, 20] [float, float, 20] [semi, ;, 20] [inlinecmt, // 8.5 done, 20] 
[private, private, 21] [attribute, attribute, 21] [id, b, 21] [colon, :, 21] [float, float, 21] [semi, ;, 21] [inlinecmt, // 8.5 done, 21] 
[private, private, 22] [attribute, attribute, 22] [id, c, 22] [colon, :, 22] [float, float, 22] [semi, ;, 22] 
[public, public, 24] [constructor, constructor, 24] [colon, :, 24] [openpar, (, 24] [id, A, 24] [colon, :, 24] [float, float, 24] [comma, ,, 24] [id, B, 24] [colon, :, 24] [float, float, 24] [comma, ,, 24] [id, C, 24] [colon, :, 24] [float, float, 24] [closepar, ), 24] [semi, ;, 24] 
[public, public, 25] [function, function, 25] [id, evaluate, 25] [colon, :, 25] [openpar, (, 25] [id, x, 25] [colon, :, 25] [float, float, 25] [closepar, ), 25] [returntype, =>, 25] [float, float, 25] [semi, ;, 25] [inlinecmt, // 9.3, 25] 
[closecubr, }, 26] [semi, ;, 26] 
[class, class, 28] [id, C, 28] [isa, isa, 28] [id, E, 28] [opencubr, {, 28] 
[private, private, 29] [attribute, attribute, 29] [id, d, 29] [colon, :, 29] [integer, integer, 29] [semi, ;, 29] 
[closecubr, }, 30] [semi, ;, 30] 
[class, class, 32] [id, E, 32] [isa, isa, 32] [id, C, 32] [opencubr, {, 32] [inlinecmt, // 14.1 done, 32] 
[private, private, 33] [attribute, attribute, 33] [id, f, 33] [colon, :, 33] [integer, integer, 33] [semi, ;, 33] 
[closecubr, }, 34] [semi, ;, 34] 
[inlinecmt, // ====== member function implementations ====== //, 37] 
[function, function, 38] [id, POLYNOMIAL, 38] [scopeop, ::, 38] [id, evaluate, 38] [openpar, (, 38] [id, x, 38] [colon, :, 38] [float, float, 38] [closepar, ), 38] [returntype, =>, 38] [float, float, 38] 
[opencubr, {, 39] 
[return, return, 40] [openpar, (, 40] [intnum, 0, 40] [closepar, ), 40] [semi, ;, 40] 
[closecubr, }, 41] 
[function, function, 43] [id, LINEAR, 43] [scopeop, ::, 43] [constructor, constructor, 43] [openpar, (, 43] [id, A, 43] [colon, :, 43] [float, float, 43] [comma, ,, 43] [id, B, 43] [colon, :, 43] [float, float, 43] [closepar, ), 43] 
[opencubr, {, 44] 
[localvar, localvar, 45] [id, new_function, 45] [colon, :, 45] [id, LINEAR, 45] [semi, ;, 45] 
[id, new_function, 46] [dot, ., 46] [id, a, 46] [assign, =, 46] [id, A, 46] [semi, ;, 46] 
[id, new_function, 47] [dot, ., 47] [id, b, 47] [assign, =, 47] [id, B, 47] [semi, ;, 47] 
[return, return, 48] [openpar, (, 48] [id, new_function, 48] [closepar, ), 48] [semi, ;, 48] 
[closecubr, }, 49] 
[function, function, 51] [id, LINEAR, 51] [scopeop, ::, 51] [id, evaluate, 51] [openpar, (, 51] [id, x, 51] [colon, :, 51] [float, float, 51] [closepar, ), 51] [returntype, =>, 51] [float, float, 51] 
[opencubr, {, 52] 
[localvar, localvar, 53] [id, result, 53] [colon, :, 53] [float, float, 53] [semi, ;, 53] 
[id, result, 54] [assign, =, 54] [floatnum, 0.0, 54] [semi, ;, 54] 
[id, result, 55] [assign, =, 55] [id, a, 55] [mult, *, 55] [id, x, 55] [plus, +, 55] [id, b, 55] [semi, ;, 55] 
[return, return, 56] [openpar, (, 56] [id, result, 56] [closepar, ), 56] [semi, ;, 56] 
[closecubr, }, 57] 
[function, function, 59] [id, QUADRATIC, 59] [scopeop, ::, 59] [id, evaluate, 59] [openpar, (, 59] [id, x, 59] [colon, :, 59] [float, float, 59] [closepar, ), 59] [returntype, =>, 59] [float, float, 59] 
[opencubr, {, 60] 
[localvar, localvar, 61] [id, result, 61] [colon, :, 61] [float, float, 61] [semi, ;, 61] 
[inlinecmt, //Using Horner's method, 62] 
[id, result, 63] [assign, =, 63] [id, a, 63] [semi, ;, 63] 
[id, result, 64] [assign, =, 64] [id, result, 64] [mult, *, 64] [id, x, 64] [plus, +, 64] [id, b, 64] [semi, ;, 64] 
[id, result, 65] [assign, =, 65] [id, result, 65] [mult, *, 65] [id, x, 65] [plus, +, 65] [id, c, 65] [semi, ;, 65] 
[return, return, 67] [openpar, (, 67] [id, result, 67] [closepar, ), 67] [semi, ;, 67] 
[closecubr, }, 68] 
[function, function, 70] [id, QUADRATIC, 70] [scopeop, ::, 70] [constructor, constructor, 70] [openpar, (, 70] [id, B, 70] [colon, :, 70] [float, float, 70] [comma, ,, 70] [id, C, 70] [colon, :, 70] [float, float, 70] [closepar, ), 70] 
[opencubr, {, 71] 
[localvar, localvar, 72] [id, new_function, 72] [colon, :, 72] [id, QUADRATIC, 72] [semi, ;, 72] 
[id, new_function, 73] [dot, ., 73] [id, a, 73] [assign, =, 73] [id, A, 73] [plus, +, 73] [id, B, 73] [mult, *, 73] [intnum, 3, 73] [semi, ;, 73] [inlinecmt, // 10.1, 73] 
[id, new_function, 74] [dot, ., 74] [id, b, 74] [assign, =, 74] [id, B, 74] [semi, ;, 74] 
[return, return, 75] [openpar, (, 75] [intnum, 1, 75] [closepar, ), 75] [semi, ;, 75] [inlinecmt, // 10.3 done, 75] 
[closecubr, }, 76] 
[inlinecmt, // 6.1, 77] 
[function, function, 78] [id, QUADRATIC, 78] [scopeop, ::, 78] [id, build2, 78] [openpar, (, 78] [id, A, 78] [colon, :, 78] [float, float, 78] [comma, ,, 78] [id, B, 78] [colon, :, 78] [float, float, 78] [comma, ,, 78] [id, C, 78] [colon, :, 78] [float, float, 78] [closepar, ), 78] [returntype, =>, 78] [id, QUADRATIC, 78] 
[opencubr, {, 79] 
[localvar, localvar, 80] [id, new_function, 80] [colon, :, 80] [id, QUADRATIC, 80] [semi, ;, 80] 
[id, new_function, 81] [dot, ., 81] [id, a, 81] [assign, =, 81] [id, A, 81] [semi, ;, 81] 
[id, new_function, 82] [dot, ., 82] [id, b, 82] [assign, =, 82] [id, B, 82] [semi, ;, 82] 
[id, new_function, 83] [dot, ., 83] [id, c, 83] [assign, =, 83] [id, C, 83] [semi, ;, 83] 
[return, return, 84] [openpar, (, 84] [id, new_function, 84] [closepar, ), 84] [semi, ;, 84] 
[closecubr, }, 85] 
[function, function, 87] [id, f, 87] [openpar, (, 87] [id, i, 87] [colon, :, 87] [integer, integer, 87] [closepar, ), 87] [returntype, =>, 87] [void, void, 87] [opencubr, {, 87] [closecubr, }, 87] 
[function, function, 88] [id, f, 88] [openpar, (, 88] [id, i, 88] [colon, :, 88] [integer, integer, 88] [closepar, ), 88] [returntype, =>, 88] [void, void, 88] [opencubr, {, 88] [closecubr, }, 88] [inlinecmt, // 8.2 done, 88] 
[function, function, 89] [id, f, 89] [openpar, (, 89] [id, i, 89] [colon, :, 89] [integer, integer, 89] [comma, ,, 89] [id, j, 89] [colon, :, 89] [integer, integer, 89] [closepar, ), 89] [returntype, =>, 89] [integer, integer, 89] [opencubr, {, 89] [closecubr, }, 89] [inlinecmt, // 9.1 done, 89] 
[function, function, 91] [id, f3, 91] [openpar, (, 91] [id, p1, 91] [colon, :, 91] [integer, integer, 91] [opensqbr, [, 91] [intnum, 2, 91] [closesqbr, ], 91] [opensqbr, [, 91] [intnum, 3, 91] [closesqbr, ], 91] [closepar, ), 91] [returntype, =>, 91] [integer, integer, 91] [opencubr, {, 91] [closecubr, }, 91] 
[function, function, 93] [id, printArray, 93] [openpar, (, 93] [id, arr, 93] [colon, :, 93] [integer, integer, 93] [opensqbr, [, 93] [closesqbr, ], 93] [comma, ,, 93] [id, size, 93] [colon, :, 93] [integer, integer, 93] [closepar, ), 93] [returntype, =>, 93] [void, void, 93] 
[opencubr, {, 94] 
[localvar, localvar, 95] [id, n, 95] [colon, :, 95] [integer, integer, 95] [semi, ;, 95] 
[localvar, localvar, 96] [id, i, 96] [colon, :, 96] [integer, integer, 96] [semi, ;, 96] 
[id, n, 97] [assign, =, 97] [id, size, 97] [semi, ;, 97] 
[id, i, 98] [assign, =, 98] [intnum, 0, 98] [semi, ;, 98] 
[while, while, 99] [openpar, (, 99] [id, i, 99] [lt, <, 99] [id, n, 99] [closepar, ), 99] [opencubr, {, 99] 
[write, write, 100] [openpar, (, 100] [id, arr, 100] [opensqbr, [, 100] [id, i, 100] [closesqbr, ], 100] [closepar, ), 100] [semi, ;, 100] 
[id, i, 101] [assign, =, 101] [id, i, 101] [plus, +, 101] [intnum, 1, 101] [semi, ;, 101] 
[closecubr, }, 102] [semi, ;, 102] 
[closecubr, }, 103] 
[inlinecmt, // ====== main ====== //, 105] 
[function, function, 106] [id, main, 106] [openpar, (, 106] [closepar, ), 106] [returntype, =>, 106] [void, void, 106] 
[opencubr, {, 107] 
[localvar, localvar, 108] [id, a, 108] [colon, :, 108] [id, a, 108] [semi, ;, 108] [inlinecmt, // 11.5 done, 108] 
[localvar, localvar, 109] [id, c, 109] [colon, :, 109] [id, C, 109] [semi, ;, 109] 
[localvar, localvar, 110] [id, f1, 110] [colon, :, 110] [id, LINEAR, 110] [semi, ;, 110] 
[localvar, localvar, 111] [id, f2, 111] [colon, :, 111] [id, QUADRATIC, 111] [semi, ;, 111] 
[localvar, localvar, 112] [id, counter, 112] [colon, :, 112] [integer, integer, 112] [semi, ;, 112] 
[localvar, localvar, 113] [id, x, 113] [colon, :, 113] [float, float, 113] [semi, ;, 113] 
[localvar, localvar, 114] [id, counter, 114] [colon, :, 114] [integer, integer, 114] [semi, ;, 114] [inlinecmt, // 8.4 done, 114] 
[localvar, localvar, 115] [id, i, 115] [colon, :, 115] [integer, integer, 115] [opensqbr, [, 115] [intnum, 2, 115] [closesqbr, ], 115] [opensqbr, [, 115] [intnum, 3, 115] [closesqbr, ], 115] [semi, ;, 115] 
[localvar, localvar, 116] [id, j, 116] [colon, :, 116] [integer, integer, 116] [opensqbr, [, 116] [intnum, 1, 116] [closesqbr, ], 116] [opensqbr, [, 116] [intnum, 2, 116] [closesqbr, ], 116] [opensqbr, [, 116] [intnum, 3, 116] [closesqbr, ], 116] [semi, ;, 116] 
[id, x, 117] [assign, =, 117] [id, counter, 117] [semi, ;, 117] [inlinecmt, // 10.2, 117] 
[id, f1, 118] [dot, ., 118] [id, build, 118] [openpar, (, 118] [intnum, 2, 118] [comma, ,, 118] [floatnum, 3.5, 118] [closepar, ), 118] [semi, ;, 118] 
[id, f2, 119] [dot, ., 119] [id, build, 119] [openpar, (, 119] [minus, -, 119] [floatnum, 2.0, 119] [comma, ,, 119] [floatnum, 1.0, 119] [comma, ,, 119] [floatnum, 0.0, 119] [closepar, ), 119] [semi, ;, 119] 
[id, c, 120] [dot, ., 120] [id, b, 120] [assign, =, 120] [intnum, 1, 120] [semi, ;, 120] [inlinecmt, // 11.2, 120] 
[id, counter, 121] [assign, =, 121] [id, c, 121] [dot, ., 121] [id, f, 121] [openpar, (, 121] [closepar, ), 121] [semi, ;, 121] [inlinecmt, // 11.3 done, 121] 
[id, undefined, 122] [openpar, (, 122] [closepar, ), 122] [semi, ;, 122] [inlinecmt, // 11.4 done, 122] 
[id, counter, 123] [assign, =, 123] [id, a, 123] [semi, ;, 123] [inlinecmt, // 11.1 done, 123] 
[id, printArray, 124] [openpar, (, 124] [intnum, 1, 124] [comma, ,, 124] [intnum, 1, 124] [comma, ,, 124] [intnum, 1, 124] [comma, ,, 124] [intnum, 1, 124] [comma, ,, 124] [intnum, 1, 124] [closepar, ), 124] [semi, ;, 124] [inlinecmt, // 12.1 done, 124] 
[id, f, 125] [openpar, (, 125] [floatnum, 1.2, 125] [comma, ,, 125] [intnum, 1, 125] [closepar, ), 125] [semi, ;, 125] [inlinecmt, // 12.2	, 125] 
[id, i, 126] [opensqbr, [, 126] [intnum, 2, 126] [closesqbr, ], 126] [assign, =, 126] [intnum, 1, 126] [semi, ;, 126] [inlinecmt, // 13.1 done, 126] 
[id, f3, 127] [openpar, (, 127] [id, j, 127] [closepar, ), 127] [semi, ;, 127] [inlinecmt, // 13.3, 127] 
[id, counter, 128] [dot, ., 128] [id, x, 128] [assign, =, 128] [intnum, 1, 128] [semi, ;, 128] [inlinecmt, // 15.1 done, 128] 
[while, while, 129] [openpar, (, 129] [id, counter, 129] [leq, <=, 129] [intnum, 10, 129] [closepar, ), 129] 
[opencubr, {, 130] 
[write, write, 131] [openpar, (, 131] [id, counter, 131] [closepar, ), 131] [semi, ;, 131] 
[write, write, 132] [openpar, (, 132] [id, f1, 132] [dot, ., 132] [id, evaluate, 132] [openpar, (, 132] [id, counter, 132] [closepar, ), 132] [closepar, ), 132] [semi, ;, 132] 
[write, write, 133] [openpar, (, 133] [id, f2, 133] [dot, ., 133] [id, evaluate, 133] [openpar, (, 133] [id, counter, 133] [closepar, ), 133] [closepar, ), 133] [semi, ;, 133] 
[closecubr, }, 134] [semi, ;, 134] 
[closecubr, }, 135] 
[blockcmt, /*\n1.   |X| Global symbol table \n2.   |X| Class symbol table\n3.1  |X| Class data member\n3.2  |X| Function's local variable\n4.1  |X| Free function\n4.2  |X| Member function\n6.1  |X| Undeclared member function definition\n6.2  |X| Undefined member function declaration\n8.1  |X| Multiply declared class\n8.2  |X| Multiply defined free function\n8.3  |X| Multiply declared identifier in class\n8.4  |X| Multiply declared identifier in function\n8.5  |X| Shadowed inherited data member\n9.1  |X| Overloaded free function\n9.2  |X| Overloaded member function\n9.3  |X| Overridden inherited member function\n10.1 |X| Type error in expression\n10.2 |X| Type error in assignment statement \n10.3 |X| Type error in return statement\n11.1 |X| Undeclared local variable\n11.2 |X| Undeclared data member\n11.3 |X| Undeclared member function\n11.4 |X| Undeclared free function\n11.5 |X| Undeclared class\n12.1 |X| function call with wrong number of parameters\n12.2 |X| function call with wrong type of parameters\n13.1 |X| Use of array with wrong number of dimensions\n13.2 |X| Array index is not an integer\n13.3 |X| Array parameter using wrong number of dimensions\n14.1 |X| Circular class dependency\n15.1 |X| "." operator used on non-class type\n15.2 |X| incorrect use of "self" \n*/, 137] 