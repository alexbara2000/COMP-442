[function, function, 1] [id, func, 1] [openpar, (, 1] [closepar, ), 1] [returntype, =>, 1] [void, void, 1] 
[opencubr, {, 2] 
[localvar, localvar, 3] [id, x, 3] [colon, :, 3] [integer, integer, 3] [semi, ;, 3] 
[localvar, localvar, 4] [id, y, 4] [colon, :, 4] [integer, integer, 4] [semi, ;, 4] 
[localvar, localvar, 5] [id, z, 5] [colon, :, 5] [integer, integer, 5] [semi, ;, 5] 
[localvar, localvar, 6] [id, q, 6] [colon, :, 6] [integer, integer, 6] [semi, ;, 6] 
[id, x, 7] [assign, =, 7] [intnum, 132, 7] [semi, ;, 7] 
[id, y, 8] [assign, =, 8] [id, x, 8] [div, /, 8] [intnum, 12, 8] [semi, ;, 8] 
[id, z, 9] [assign, =, 9] [intnum, 9, 9] [semi, ;, 9] 
[id, q, 10] [assign, =, 10] [id, z, 10] [semi, ;, 10] 
[if, if, 11] [openpar, (, 11] [id, z, 11] [eq, ==, 11] [id, z, 11] [closepar, ), 11] [then, then, 11] [opencubr, {, 11] 
[inlinecmt, // swap temp and arr[i], 12] 
[write, write, 13] [openpar, (, 13] [id, x, 13] [closepar, ), 13] [semi, ;, 13] 
[if, if, 14] [openpar, (, 14] [intnum, 2, 14] [eq, ==, 14] [intnum, 1, 14] [closepar, ), 14] [then, then, 14] [opencubr, {, 14] 
[write, write, 15] [openpar, (, 15] [intnum, 10000, 15] [closepar, ), 15] [semi, ;, 15] 
[closecubr, }, 16] [else, else, 16] [opencubr, {, 16] 
[write, write, 17] [openpar, (, 17] [intnum, 1, 17] [closepar, ), 17] [semi, ;, 17] 
[closecubr, }, 18] [semi, ;, 18] 
[closecubr, }, 19] [else, else, 19] [opencubr, {, 19] 
[write, write, 20] [openpar, (, 20] [id, y, 20] [closepar, ), 20] [semi, ;, 20] 
[closecubr, }, 21] [semi, ;, 21] 
[write, write, 22] [openpar, (, 22] [id, q, 22] [closepar, ), 22] [semi, ;, 22] 
[closecubr, }, 23] 
[function, function, 24] [id, main, 24] [openpar, (, 24] [closepar, ), 24] [returntype, =>, 24] [void, void, 24] 
[opencubr, {, 25] 
[id, func, 26] [openpar, (, 26] [closepar, ), 26] [semi, ;, 26] 
[closecubr, }, 27] 